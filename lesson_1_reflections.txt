How did viewing a diff between two versions of a file help you see the bug that was introduced?

It was useful to see how the code differed, so I could tell what change messed it up. 


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It could show all the changes you made so if there is every a problem, you can see what you did. 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

It is good to be able to control a manual save but bad that you could forget to save. 


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because it makes sense for differnet functions. When writing code the files are often interelated so you would make a change to multple at once. For something like Google Docs each one is contained so you wouldn't need to do that.


How can you use the commands git log and git diff to view the history of files?

Git log shows you a list of all the comites, and you can see the actual changes between two files by using git diff


How might using version control make you more confident to make changes that could break something?


You can go back! 